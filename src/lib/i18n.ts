export interface Translations {
  // Header
  decks: string;
  add: string;
  connect: string;
  disconnect: string;
  loading: string;
  privacyPolicy: string;

  // Submit Deck Page
  submitDeck: string;
  createFlashcardDeck: string;
  needBaseSepolia: string;
  networkFaucets: string;
  deckName: string;
  briefDescription: string;
  frontLanguage: string;
  backLanguage: string;
  inputMethod: string;
  manualEntry: string;
  csvUpload: string;
  dropCsvOrClick: string;
  csvFormat: string;
  flashcards: string;
  addCard: string;
  card: string;
  remove: string;
  frontText: string;
  backText: string;
  phoneticGuide: string;
  phoneticGuideOptional: string;
  notesOptional: string;
  submitting: string;
  required: string;
  minimumCardsRequired: string;
  csvFileRequired: string;

  // Homepage
  cobrowseWithScarlett: string;
  languageTutorDescription: string;
  chromeBrowser: string;
  firefoxBrowser: string;
  scarlettSupercoach: string;
  spacedRepetitionDescription: string;
  addFlashcardsToStudy: string;
  addFlashcardsDescription: string;
  viewDecks: string;
  learnPassivelyAcrossWeb: string;
  learnPassivelyDescription: string;
  translateFasterLocally: string;
  translateFasterDescription: string;
  quizYourselfDaily: string;
  quizYourselfDescription: string;
  embedEveryWebpage: string;
  embedEveryWebpageDescription: string;
  blockSitesInFocusMode: string;
  blockSitesDescription: string;
  getVoiceAudioWithTimestamps: string;
  getVoiceAudioDescription: string;
  getVoiceAudioSupport: string;
  evadeCensorship: string;
  evadeCensorshipDescription: string;
  downloadForFree: string;
  installScarlettExtension: string;

  // Languages
  english: string;
  vietnamese: string;
  mandarin: string;
  german: string;
  italian: string;
  portuguese: string;
  russian: string;
  japanese: string;
  korean: string;

  // Privacy Policy
  privacyPolicyTitle: string;
  lastUpdated: string;
  introduction: string;
  introductionText: string;
  informationWeCollect: string;
  analyticsData: string;
  analyticsDataDesc: string;
  featureUsageMetrics: string;
  performanceData: string;
  milestoneEvents: string;
  technicalInformation: string;
  whatWeDoNotCollect: string;
  personalConversations: string;
  personalInformation: string;
  browsingHistory: string;
  fileContents: string;
  voiceData: string;
  howWeUseInformation: string;
  howWeUseInformationDesc: string;
  improveFeatures: string;
  identifyBugs: string;
  understandValuableFeatures: string;
  informDevelopmentDecisions: string;
  dataStorageAndSecurity: string;
  localData: string;
  localDataDesc1: string;
  localDataDesc2: string;
  localDataDesc3: string;
  analyticsDataSection: string;
  analyticsDataDesc1: string;
  analyticsDataDesc2: string;
  analyticsDataDesc3: string;
  thirdPartyServices: string;
  umamiAnalytics: string;
  umamiAnalyticsDesc: string;
  umamiFeature1: string;
  umamiFeature2: string;
  umamiFeature3: string;
  moreInfoUmami: string;
  localAiModels: string;
  localAiModelsDesc: string;
  localAiFeature1: string;
  localAiFeature2: string;
  localAiFeature3: string;
  yourRightsAndChoices: string;
  dataControl: string;
  disableAnalytics: string;
  clearLocalData: string;
  featureControl: string;
  accessAndDeletion: string;
  accessAndDeletionDesc1: string;
  accessAndDeletionDesc2: string;
  accessAndDeletionDesc3: string;
  contactInformation: string;
  contactInformationDesc: string;
  githubIssues: string;
  openSourceTransparency: string;
  openSourceTransparencyDesc: string;
  githubRepository: string;
  updatesToPolicy: string;
  updatesPolicyDesc: string;
  extensionUpdateNotifications: string;
  websitePosting: string;
  githubRepositoryUpdates: string;
  finalNote: string;
}

export const translations: Record<string, Translations> = {
  en: {
    // Header
    decks: "Decks",
    add: "Add",
    connect: "Connect",
    disconnect: "Disconnect",
    loading: "Loading...",
    privacyPolicy: "Privacy Policy",

    // Submit Deck Page
    submitDeck: "Submit Deck",
    createFlashcardDeck: "Create flashcard deck for testnet review. You'll need Base Sepolia ETH, which can be acquired freely from",
    needBaseSepolia: "network faucets",
    networkFaucets: "network faucets",
    deckName: "Deck name",
    briefDescription: "Brief description",
    frontLanguage: "Front Language",
    backLanguage: "Back Language",
    inputMethod: "Input Method",
    manualEntry: "‚úçÔ∏è Manual Entry",
    csvUpload: "üìÑ CSV Upload",
    dropCsvOrClick: "üìÑ Drop CSV or click to upload",
    csvFormat: "Format: front_text,back_text,front_phonetic_guide,back_phonetic_guide,notes",
    flashcards: "Flashcards",
    addCard: "+ Add Card",
    card: "Card",
    remove: "Remove",
    frontText: "Front text",
    backText: "Back text",
    phoneticGuide: "Phonetic guide",
    phoneticGuideOptional: "Phonetic guide (optional)",
    notesOptional: "Notes (optional)",
    submitting: "Submitting...",
    required: "Required",
    minimumCardsRequired: "Minimum 5 complete cards required",
    csvFileRequired: "CSV file required",

    // Homepage
    cobrowseWithScarlett: "Cobrowse with Scarlett AI extension",
    languageTutorDescription: "Language tutor, lifecoach, friend. Free and open source.",
    chromeBrowser: "Chrome",
    firefoxBrowser: "Firefox",
    scarlettSupercoach: "Scarlett is your supercoach",
    spacedRepetitionDescription: "Spaced repetition, roleplaying, productivity, and more.",
    addFlashcardsToStudy: "Add flashcards to study",
    addFlashcardsDescription: "Add decks of flashcards from other users, or make your own.",
    viewDecks: "View Decks",
    learnPassivelyAcrossWeb: "Learn passively across the web",
    learnPassivelyDescription: "Scarlett replaces the words you're learning on the webpages you visit.",
    translateFasterLocally: "Translate faster, locally",
    translateFasterDescription: "Right click to translate any text, which then adds it to your flashcard deck automatically.",
    quizYourselfDaily: "Quiz yourself daily",
    quizYourselfDescription: "Scarlett generates quiz questions like multiple choice to test your knowledge.",
    embedEveryWebpage: "Embed every webpage you visit",
    embedEveryWebpageDescription: "Scarlett queues, summarizes, and embeds every page you visit. She knows you better than you know yourself.",
    blockSitesInFocusMode: "Block sites during \"Focus Mode\"",
    blockSitesDescription: "Find yourself visiting porn sites or social media habitually? Enable focus mode to redirect to your flashcards instead.",
    getVoiceAudioWithTimestamps: "Get voice audio with timestamps",
    getVoiceAudioDescription: "Setup text-to-speech with ElevenLabs to generate realistic TTS with word-level timestamps, which are ideal for learning.",
    getVoiceAudioSupport: "Support for Orpheus, Dia, and Kokoro soon.",
    evadeCensorship: "Evade censorship",
    evadeCensorshipDescription: "Can't access YouTube, Reddit, or Twitch? Scarlett automatically redirects you to privacy preserving frontends that you can access even without a VPN.",
    downloadForFree: "Download for Free",
    installScarlettExtension: "Install the Scarlett browser extension",

    // Languages
    english: "English",
    vietnamese: "Vietnamese", 
    mandarin: "Mandarin",
    german: "German",
    italian: "Italian",
    portuguese: "Portuguese",
    russian: "Russian",
    japanese: "Japanese",
    korean: "Korean",

    // Privacy Policy
    privacyPolicyTitle: "Privacy Policy for Scarlett Browser Extension",
    lastUpdated: "Last Updated:",
    introduction: "Introduction",
    introductionText: "Scarlett ('we,' 'our,' or 'us') is committed to protecting your privacy. This Privacy Policy explains how we collect, use, and safeguard information when you use our browser extension.",
    informationWeCollect: "Information We Collect",
    analyticsData: "Analytics Data",
    analyticsDataDesc: "We use Umami Analytics (a privacy-focused analytics service) to collect anonymous usage statistics to help us improve the extension. This includes:",
    featureUsageMetrics: "Feature Usage Metrics: Which features you use (chat, study sessions, focus mode, bookmarks, etc.)",
    performanceData: "Performance Data: How often features are accessed and basic usage patterns",
    milestoneEvents: "Milestone Events: Anonymous tracking of study streaks and learning progress",
    technicalInformation: "Technical Information: Browser type, extension version, and basic system information",
    whatWeDoNotCollect: "What We DO NOT Collect",
    personalConversations: "Personal Conversations: Your AI chat conversations remain completely local on your device",
    personalInformation: "Personal Information: We do not collect names, email addresses, or other personally identifiable information",
    browsingHistory: "Browsing History: We do not track or store your browsing activity outside the extension",
    fileContents: "File Contents: Any documents or content you process remain on your device",
    voiceData: "Voice Data: Speech-to-text processing happens locally on your device",
    howWeUseInformation: "How We Use Information",
    howWeUseInformationDesc: "We use the collected analytics data to:",
    improveFeatures: "Improve extension features and user experience",
    identifyBugs: "Identify and fix bugs or performance issues",
    understandValuableFeatures: "Understand which features are most valuable to users",
    informDevelopmentDecisions: "Make informed decisions about future development",
    dataStorageAndSecurity: "Data Storage and Security",
    localData: "Local Data",
    localDataDesc1: "All your personal data (conversations, bookmarks, study progress) is stored locally in your browser",
    localDataDesc2: "AI conversations with local models (Jan.ai, Ollama, LM Studio) never leave your device",
    localDataDesc3: "Your study materials and progress are synced only within your browser's local storage",
    analyticsDataSection: "Analytics Data",
    analyticsDataDesc1: "Anonymous usage analytics are processed by Umami Analytics",
    analyticsDataDesc2: "Data is stored on secure servers and automatically anonymized",
    analyticsDataDesc3: "No personal identifiers are transmitted or stored",
    thirdPartyServices: "Third-Party Services",
    umamiAnalytics: "Umami Analytics",
    umamiAnalyticsDesc: "We use Umami Analytics (cloud.umami.is) for privacy-focused website analytics. Umami:",
    umamiFeature1: "Does not use cookies or track personal information",
    umamiFeature2: "Complies with GDPR and other privacy regulations",
    umamiFeature3: "Provides only aggregated, anonymous data",
    moreInfoUmami: "More information",
    localAiModels: "Local AI Models",
    localAiModelsDesc: "The extension supports integration with local AI services (Jan.ai, Ollama, LM Studio):",
    localAiFeature1: "All AI conversations happen locally on your device",
    localAiFeature2: "No conversation data is transmitted to external servers",
    localAiFeature3: "You maintain complete control over your AI interactions",
    yourRightsAndChoices: "Your Rights and Choices",
    dataControl: "Data Control",
    disableAnalytics: "Disable Analytics: You can disable analytics collection in the extension settings",
    clearLocalData: "Local Data: You can clear all local extension data through your browser settings",
    featureControl: "Feature Control: You can enable/disable specific features as needed",
    accessAndDeletion: "Access and Deletion",
    accessAndDeletionDesc1: "Analytics data is anonymous and cannot be traced back to individual users",
    accessAndDeletionDesc2: "You can request information about our data practices by contacting us",
    accessAndDeletionDesc3: "Local data can be deleted by uninstalling the extension or clearing browser data",
    contactInformation: "Contact Information",
    contactInformationDesc: "If you have questions about this Privacy Policy or our data practices, please contact us:",
    githubIssues: "GitHub Issues",
    openSourceTransparency: "Open Source Transparency",
    openSourceTransparencyDesc: "Scarlett is open source software. You can review our code and data practices at:",
    githubRepository: "GitHub Repository",
    updatesToPolicy: "Updates to This Policy",
    updatesPolicyDesc: "We may update this Privacy Policy periodically. We will notify users of any material changes through:",
    extensionUpdateNotifications: "Extension update notifications",
    websitePosting: "Posting the updated policy on our website",
    githubRepositoryUpdates: "GitHub repository updates",
    finalNote: "This privacy policy is effective as of the date listed above and governs our collection and use of information from that date forward.",
  },

  vi: {
    // Header
    decks: "B·ªô Th·∫ª",
    add: "Th√™m",
    connect: "K·∫øt N·ªëi",
    disconnect: "Ng·∫Øt K·∫øt N·ªëi",
    loading: "ƒêang T·∫£i...",
    privacyPolicy: "Ch√≠nh S√°ch B·∫£o M·∫≠t",

    // Submit Deck Page
    submitDeck: "G·ª≠i B·ªô Th·∫ª",
    createFlashcardDeck: "T·∫°o b·ªô th·∫ª flashcard ƒë·ªÉ ƒë√°nh gi√° testnet. B·∫°n s·∫Ω c·∫ßn Base Sepolia ETH, c√≥ th·ªÉ l·∫•y mi·ªÖn ph√≠ t·ª´",
    needBaseSepolia: "v√≤i m·∫°ng",
    networkFaucets: "v√≤i m·∫°ng",
    deckName: "T√™n b·ªô th·∫ª",
    briefDescription: "M√¥ t·∫£ ng·∫Øn g·ªçn",
    frontLanguage: "Ng√¥n Ng·ªØ M·∫∑t Tr∆∞·ªõc",
    backLanguage: "Ng√¥n Ng·ªØ M·∫∑t Sau",
    inputMethod: "Ph∆∞∆°ng Th·ª©c Nh·∫≠p",
    manualEntry: "‚úçÔ∏è Nh·∫≠p Th·ªß C√¥ng",
    csvUpload: "üìÑ T·∫£i L√™n CSV",
    dropCsvOrClick: "üìÑ Th·∫£ CSV ho·∫∑c nh·∫•p ƒë·ªÉ t·∫£i l√™n",
    csvFormat: "ƒê·ªãnh d·∫°ng: front_text,back_text,front_phonetic_guide,back_phonetic_guide,notes",
    flashcards: "Th·∫ª Flashcard",
    addCard: "+ Th√™m Th·∫ª",
    card: "Th·∫ª",
    remove: "X√≥a",
    frontText: "VƒÉn b·∫£n m·∫∑t tr∆∞·ªõc",
    backText: "VƒÉn b·∫£n m·∫∑t sau",
    phoneticGuide: "H∆∞·ªõng d·∫´n phi√™n √¢m",
    phoneticGuideOptional: "H∆∞·ªõng d·∫´n phi√™n √¢m (t√πy ch·ªçn)",
    notesOptional: "Ghi ch√∫ (t√πy ch·ªçn)",
    submitting: "ƒêang G·ª≠i...",
    required: "B·∫Øt bu·ªôc",
    minimumCardsRequired: "T·ªëi thi·ªÉu 5 th·∫ª ho√†n ch·ªânh",
    csvFileRequired: "C·∫ßn t·ªáp CSV",

    // Homepage
    cobrowseWithScarlett: "Duy·ªát web c√πng ti·ªán √≠ch AI Scarlett",
    languageTutorDescription: "Gia s∆∞ ng√¥n ng·ªØ, hu·∫•n luy·ªán vi√™n cu·ªôc s·ªëng, ng∆∞·ªùi b·∫°n. Mi·ªÖn ph√≠ v√† m√£ ngu·ªìn m·ªü.",
    chromeBrowser: "Chrome",
    firefoxBrowser: "Firefox",
    scarlettSupercoach: "Scarlett l√† si√™u hu·∫•n luy·ªán vi√™n c·ªßa b·∫°n",
    spacedRepetitionDescription: "L·∫∑p l·∫°i c√≥ kho·∫£ng c√°ch, nh·∫≠p vai, nƒÉng su·∫•t v√† nhi·ªÅu h∆°n n·ªØa.",
    addFlashcardsToStudy: "Th√™m th·∫ª flashcard ƒë·ªÉ h·ªçc",
    addFlashcardsDescription: "Th√™m b·ªô th·∫ª flashcard t·ª´ ng∆∞·ªùi d√πng kh√°c ho·∫∑c t·ª± t·∫°o.",
    viewDecks: "Xem B·ªô Th·∫ª",
    learnPassivelyAcrossWeb: "H·ªçc th·ª• ƒë·ªông tr√™n web",
    learnPassivelyDescription: "Scarlett thay th·∫ø c√°c t·ª´ b·∫°n ƒëang h·ªçc tr√™n c√°c trang web b·∫°n truy c·∫≠p.",
    translateFasterLocally: "D·ªãch nhanh h∆°n, c·ª•c b·ªô",
    translateFasterDescription: "Nh·∫•p chu·ªôt ph·∫£i ƒë·ªÉ d·ªãch b·∫•t k·ª≥ vƒÉn b·∫£n n√†o, sau ƒë√≥ t·ª± ƒë·ªông th√™m v√†o b·ªô th·∫ª flashcard c·ªßa b·∫°n.",
    quizYourselfDaily: "T·ª± ki·ªÉm tra h√†ng ng√†y",
    quizYourselfDescription: "Scarlett t·∫°o ra c√°c c√¢u h·ªèi ki·ªÉm tra nh∆∞ tr·∫Øc nghi·ªám ƒë·ªÉ ki·ªÉm tra ki·∫øn th·ª©c c·ªßa b·∫°n.",
    embedEveryWebpage: "Nh√∫ng m·ªçi trang web b·∫°n truy c·∫≠p",
    embedEveryWebpageDescription: "Scarlett x·∫øp h√†ng, t√≥m t·∫Øt v√† nh√∫ng m·ªçi trang b·∫°n truy c·∫≠p. C√¥ ·∫•y hi·ªÉu b·∫°n h∆°n c·∫£ ch√≠nh b·∫°n.",
    blockSitesInFocusMode: "Ch·∫∑n trang web trong \"Ch·∫ø ƒë·ªô T·∫≠p trung\"",
    blockSitesDescription: "B·∫°n c√≥ th∆∞·ªùng xuy√™n truy c·∫≠p c√°c trang web khi√™u d√¢m ho·∫∑c m·∫°ng x√£ h·ªôi m·ªôt c√°ch th√≥i quen? B·∫≠t ch·∫ø ƒë·ªô t·∫≠p trung ƒë·ªÉ chuy·ªÉn h∆∞·ªõng ƒë·∫øn th·∫ª flashcard thay th·∫ø.",
    getVoiceAudioWithTimestamps: "Nh·∫≠n √¢m thanh gi·ªçng n√≥i v·ªõi d·∫•u th·ªùi gian",
    getVoiceAudioDescription: "Thi·∫øt l·∫≠p chuy·ªÉn vƒÉn b·∫£n th√†nh gi·ªçng n√≥i v·ªõi ElevenLabs ƒë·ªÉ t·∫°o TTS th·ª±c t·∫ø v·ªõi d·∫•u th·ªùi gian t·ª´ng t·ª´, l√Ω t∆∞·ªüng cho vi·ªác h·ªçc.",
    getVoiceAudioSupport: "H·ªó tr·ª£ Orpheus, Dia v√† Kokoro s·ªõm.",
    evadeCensorship: "Tr√°nh ki·ªÉm duy·ªát",
    evadeCensorshipDescription: "Kh√¥ng th·ªÉ truy c·∫≠p YouTube, Reddit ho·∫∑c Twitch? Scarlett t·ª± ƒë·ªông chuy·ªÉn h∆∞·ªõng b·∫°n ƒë·∫øn c√°c giao di·ªán b·∫£o v·ªá quy·ªÅn ri√™ng t∆∞ m√† b·∫°n c√≥ th·ªÉ truy c·∫≠p ngay c·∫£ kh√¥ng c√≥ VPN.",
    downloadForFree: "T·∫£i xu·ªëng Mi·ªÖn ph√≠",
    installScarlettExtension: "C√†i ƒë·∫∑t ti·ªán √≠ch tr√¨nh duy·ªát Scarlett",

    // Languages
    english: "Ti·∫øng Anh",
    vietnamese: "Ti·∫øng Vi·ªát",
    mandarin: "Ti·∫øng Trung",
    german: "Ti·∫øng ƒê·ª©c",
    italian: "Ti·∫øng √ù",
    portuguese: "Ti·∫øng B·ªì ƒê√†o Nha",
    russian: "Ti·∫øng Nga",
    japanese: "Ti·∫øng Nh·∫≠t",
    korean: "Ti·∫øng H√†n",

    // Privacy Policy
    privacyPolicyTitle: "Ch√≠nh S√°ch B·∫£o M·∫≠t cho Ti·ªán √çch Tr√¨nh Duy·ªát Scarlett",
    lastUpdated: "C·∫≠p nh·∫≠t l·∫ßn cu·ªëi:",
    introduction: "Gi·ªõi thi·ªáu",
    introductionText: "Scarlett ('ch√∫ng t√¥i,' 'c·ªßa ch√∫ng t√¥i,' ho·∫∑c 'ch√∫ng t√¥i') cam k·∫øt b·∫£o v·ªá quy·ªÅn ri√™ng t∆∞ c·ªßa b·∫°n. Ch√≠nh s√°ch B·∫£o m·∫≠t n√†y gi·∫£i th√≠ch c√°ch ch√∫ng t√¥i thu th·∫≠p, s·ª≠ d·ª•ng v√† b·∫£o v·ªá th√¥ng tin khi b·∫°n s·ª≠ d·ª•ng ti·ªán √≠ch tr√¨nh duy·ªát c·ªßa ch√∫ng t√¥i.",
    informationWeCollect: "Th√¥ng Tin Ch√∫ng T√¥i Thu Th·∫≠p",
    analyticsData: "D·ªØ Li·ªáu Ph√¢n T√≠ch",
    analyticsDataDesc: "Ch√∫ng t√¥i s·ª≠ d·ª•ng Umami Analytics (d·ªãch v·ª• ph√¢n t√≠ch t·∫≠p trung v√†o quy·ªÅn ri√™ng t∆∞) ƒë·ªÉ thu th·∫≠p th·ªëng k√™ s·ª≠ d·ª•ng ·∫©n danh nh·∫±m gi√∫p ch√∫ng t√¥i c·∫£i thi·ªán ti·ªán √≠ch. ƒêi·ªÅu n√†y bao g·ªìm:",
    featureUsageMetrics: "S·ªë Li·ªáu S·ª≠ D·ª•ng T√≠nh NƒÉng: Nh·ªØng t√≠nh nƒÉng b·∫°n s·ª≠ d·ª•ng (tr√≤ chuy·ªán, phi√™n h·ªçc t·∫≠p, ch·∫ø ƒë·ªô t·∫≠p trung, d·∫•u trang, v.v.)",
    performanceData: "D·ªØ Li·ªáu Hi·ªáu Su·∫•t: T·∫ßn su·∫•t truy c·∫≠p t√≠nh nƒÉng v√† c√°c m·∫´u s·ª≠ d·ª•ng c∆° b·∫£n",
    milestoneEvents: "S·ª± Ki·ªán M·ªëc: Theo d√µi ·∫©n danh c√°c chu·ªói h·ªçc t·∫≠p v√† ti·∫øn tr√¨nh h·ªçc t·∫≠p",
    technicalInformation: "Th√¥ng Tin K·ªπ Thu·∫≠t: Lo·∫°i tr√¨nh duy·ªát, phi√™n b·∫£n ti·ªán √≠ch v√† th√¥ng tin h·ªá th·ªëng c∆° b·∫£n",
    whatWeDoNotCollect: "Nh·ªØng G√¨ Ch√∫ng T√¥i KH√îNG Thu Th·∫≠p",
    personalConversations: "Cu·ªôc Tr√≤ Chuy·ªán C√° Nh√¢n: C√°c cu·ªôc tr√≤ chuy·ªán AI c·ªßa b·∫°n v·∫´n ho√†n to√†n c·ª•c b·ªô tr√™n thi·∫øt b·ªã c·ªßa b·∫°n",
    personalInformation: "Th√¥ng Tin C√° Nh√¢n: Ch√∫ng t√¥i kh√¥ng thu th·∫≠p t√™n, ƒë·ªãa ch·ªâ email ho·∫∑c c√°c th√¥ng tin nh·∫≠n d·∫°ng c√° nh√¢n kh√°c",
    browsingHistory: "L·ªãch S·ª≠ Duy·ªát Web: Ch√∫ng t√¥i kh√¥ng theo d√µi ho·∫∑c l∆∞u tr·ªØ ho·∫°t ƒë·ªông duy·ªát web c·ªßa b·∫°n b√™n ngo√†i ti·ªán √≠ch",
    fileContents: "N·ªôi Dung T·ªáp: B·∫•t k·ª≥ t√†i li·ªáu ho·∫∑c n·ªôi dung n√†o b·∫°n x·ª≠ l√Ω ƒë·ªÅu v·∫´n tr√™n thi·∫øt b·ªã c·ªßa b·∫°n",
    voiceData: "D·ªØ Li·ªáu Gi·ªçng N√≥i: X·ª≠ l√Ω chuy·ªÉn gi·ªçng n√≥i th√†nh vƒÉn b·∫£n di·ªÖn ra c·ª•c b·ªô tr√™n thi·∫øt b·ªã c·ªßa b·∫°n",
    howWeUseInformation: "C√°ch Ch√∫ng T√¥i S·ª≠ D·ª•ng Th√¥ng Tin",
    howWeUseInformationDesc: "Ch√∫ng t√¥i s·ª≠ d·ª•ng d·ªØ li·ªáu ph√¢n t√≠ch ƒë√£ thu th·∫≠p ƒë·ªÉ:",
    improveFeatures: "C·∫£i thi·ªán c√°c t√≠nh nƒÉng ti·ªán √≠ch v√† tr·∫£i nghi·ªám ng∆∞·ªùi d√πng",
    identifyBugs: "X√°c ƒë·ªãnh v√† kh·∫Øc ph·ª•c l·ªói ho·∫∑c v·∫•n ƒë·ªÅ hi·ªáu su·∫•t",
    understandValuableFeatures: "Hi·ªÉu nh·ªØng t√≠nh nƒÉng n√†o c√≥ gi√° tr·ªã nh·∫•t ƒë·ªëi v·ªõi ng∆∞·ªùi d√πng",
    informDevelopmentDecisions: "ƒê∆∞a ra quy·∫øt ƒë·ªãnh s√°ng su·ªët v·ªÅ ph√°t tri·ªÉn t∆∞∆°ng lai",
    dataStorageAndSecurity: "L∆∞u Tr·ªØ v√† B·∫£o M·∫≠t D·ªØ Li·ªáu",
    localData: "D·ªØ Li·ªáu C·ª•c B·ªô",
    localDataDesc1: "T·∫•t c·∫£ d·ªØ li·ªáu c√° nh√¢n c·ªßa b·∫°n (cu·ªôc tr√≤ chuy·ªán, d·∫•u trang, ti·∫øn tr√¨nh h·ªçc t·∫≠p) ƒë∆∞·ª£c l∆∞u tr·ªØ c·ª•c b·ªô trong tr√¨nh duy·ªát c·ªßa b·∫°n",
    localDataDesc2: "C√°c cu·ªôc tr√≤ chuy·ªán AI v·ªõi c√°c m√¥ h√¨nh c·ª•c b·ªô (Jan.ai, Ollama, LM Studio) kh√¥ng bao gi·ªù r·ªùi kh·ªèi thi·∫øt b·ªã c·ªßa b·∫°n",
    localDataDesc3: "T√†i li·ªáu h·ªçc t·∫≠p v√† ti·∫øn tr√¨nh c·ªßa b·∫°n ch·ªâ ƒë∆∞·ª£c ƒë·ªìng b·ªô trong b·ªô nh·ªõ c·ª•c b·ªô c·ªßa tr√¨nh duy·ªát",
    analyticsDataSection: "D·ªØ Li·ªáu Ph√¢n T√≠ch",
    analyticsDataDesc1: "Ph√¢n t√≠ch s·ª≠ d·ª•ng ·∫©n danh ƒë∆∞·ª£c x·ª≠ l√Ω b·ªüi Umami Analytics",
    analyticsDataDesc2: "D·ªØ li·ªáu ƒë∆∞·ª£c l∆∞u tr·ªØ tr√™n m√°y ch·ªß an to√†n v√† t·ª± ƒë·ªông ·∫©n danh h√≥a",
    analyticsDataDesc3: "Kh√¥ng c√≥ ƒë·ªãnh danh c√° nh√¢n n√†o ƒë∆∞·ª£c truy·ªÅn ho·∫∑c l∆∞u tr·ªØ",
    thirdPartyServices: "D·ªãch V·ª• B√™n Th·ª© Ba",
    umamiAnalytics: "Umami Analytics",
    umamiAnalyticsDesc: "Ch√∫ng t√¥i s·ª≠ d·ª•ng Umami Analytics (cloud.umami.is) cho ph√¢n t√≠ch trang web t·∫≠p trung v√†o quy·ªÅn ri√™ng t∆∞. Umami:",
    umamiFeature1: "Kh√¥ng s·ª≠ d·ª•ng cookie ho·∫∑c theo d√µi th√¥ng tin c√° nh√¢n",
    umamiFeature2: "Tu√¢n th·ªß GDPR v√† c√°c quy ƒë·ªãnh b·∫£o m·∫≠t kh√°c",
    umamiFeature3: "Ch·ªâ cung c·∫•p d·ªØ li·ªáu t·ªïng h·ª£p, ·∫©n danh",
    moreInfoUmami: "Th√¥ng tin th√™m",
    localAiModels: "M√¥ H√¨nh AI C·ª•c B·ªô",
    localAiModelsDesc: "Ti·ªán √≠ch h·ªó tr·ª£ t√≠ch h·ª£p v·ªõi c√°c d·ªãch v·ª• AI c·ª•c b·ªô (Jan.ai, Ollama, LM Studio):",
    localAiFeature1: "T·∫•t c·∫£ cu·ªôc tr√≤ chuy·ªán AI di·ªÖn ra c·ª•c b·ªô tr√™n thi·∫øt b·ªã c·ªßa b·∫°n",
    localAiFeature2: "Kh√¥ng c√≥ d·ªØ li·ªáu cu·ªôc tr√≤ chuy·ªán n√†o ƒë∆∞·ª£c truy·ªÅn ƒë·∫øn m√°y ch·ªß b√™n ngo√†i",
    localAiFeature3: "B·∫°n duy tr√¨ quy·ªÅn ki·ªÉm so√°t ho√†n to√†n c√°c t∆∞∆°ng t√°c AI c·ªßa m√¨nh",
    yourRightsAndChoices: "Quy·ªÅn v√† L·ª±a Ch·ªçn c·ªßa B·∫°n",
    dataControl: "Ki·ªÉm So√°t D·ªØ Li·ªáu",
    disableAnalytics: "T·∫Øt Ph√¢n T√≠ch: B·∫°n c√≥ th·ªÉ t·∫Øt thu th·∫≠p ph√¢n t√≠ch trong c√†i ƒë·∫∑t ti·ªán √≠ch",
    clearLocalData: "D·ªØ Li·ªáu C·ª•c B·ªô: B·∫°n c√≥ th·ªÉ x√≥a t·∫•t c·∫£ d·ªØ li·ªáu ti·ªán √≠ch c·ª•c b·ªô th√¥ng qua c√†i ƒë·∫∑t tr√¨nh duy·ªát",
    featureControl: "Ki·ªÉm So√°t T√≠nh NƒÉng: B·∫°n c√≥ th·ªÉ b·∫≠t/t·∫Øt c√°c t√≠nh nƒÉng c·ª• th·ªÉ theo nhu c·∫ßu",
    accessAndDeletion: "Truy C·∫≠p v√† X√≥a",
    accessAndDeletionDesc1: "D·ªØ li·ªáu ph√¢n t√≠ch l√† ·∫©n danh v√† kh√¥ng th·ªÉ truy v·∫øt ng∆∞·ª£c l·∫°i ng∆∞·ªùi d√πng c√° nh√¢n",
    accessAndDeletionDesc2: "B·∫°n c√≥ th·ªÉ y√™u c·∫ßu th√¥ng tin v·ªÅ c√°c th·ª±c h√†nh d·ªØ li·ªáu c·ªßa ch√∫ng t√¥i b·∫±ng c√°ch li√™n h·ªá v·ªõi ch√∫ng t√¥i",
    accessAndDeletionDesc3: "D·ªØ li·ªáu c·ª•c b·ªô c√≥ th·ªÉ ƒë∆∞·ª£c x√≥a b·∫±ng c√°ch g·ª° c√†i ƒë·∫∑t ti·ªán √≠ch ho·∫∑c x√≥a d·ªØ li·ªáu tr√¨nh duy·ªát",
    contactInformation: "Th√¥ng Tin Li√™n H·ªá",
    contactInformationDesc: "N·∫øu b·∫°n c√≥ th·∫Øc m·∫Øc v·ªÅ Ch√≠nh s√°ch B·∫£o m·∫≠t n√†y ho·∫∑c c√°c th·ª±c h√†nh d·ªØ li·ªáu c·ªßa ch√∫ng t√¥i, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i:",
    githubIssues: "GitHub Issues",
    openSourceTransparency: "Minh B·∫°ch M√£ Ngu·ªìn M·ªü",
    openSourceTransparencyDesc: "Scarlett l√† ph·∫ßn m·ªÅm m√£ ngu·ªìn m·ªü. B·∫°n c√≥ th·ªÉ xem x√©t m√£ v√† c√°c th·ª±c h√†nh d·ªØ li·ªáu c·ªßa ch√∫ng t√¥i t·∫°i:",
    githubRepository: "Kho GitHub",
    updatesToPolicy: "C·∫≠p Nh·∫≠t Ch√≠nh S√°ch N√†y",
    updatesPolicyDesc: "Ch√∫ng t√¥i c√≥ th·ªÉ c·∫≠p nh·∫≠t Ch√≠nh s√°ch B·∫£o m·∫≠t n√†y ƒë·ªãnh k·ª≥. Ch√∫ng t√¥i s·∫Ω th√¥ng b√°o cho ng∆∞·ªùi d√πng v·ªÅ b·∫•t k·ª≥ thay ƒë·ªïi quan tr·ªçng n√†o th√¥ng qua:",
    extensionUpdateNotifications: "Th√¥ng b√°o c·∫≠p nh·∫≠t ti·ªán √≠ch",
    websitePosting: "ƒêƒÉng ch√≠nh s√°ch c·∫≠p nh·∫≠t tr√™n trang web c·ªßa ch√∫ng t√¥i",
    githubRepositoryUpdates: "C·∫≠p nh·∫≠t kho GitHub",
    finalNote: "Ch√≠nh s√°ch b·∫£o m·∫≠t n√†y c√≥ hi·ªáu l·ª±c t·ª´ ng√†y ƒë∆∞·ª£c li·ªát k√™ ·ªü tr√™n v√† ƒëi·ªÅu ch·ªânh vi·ªác thu th·∫≠p v√† s·ª≠ d·ª•ng th√¥ng tin c·ªßa ch√∫ng t√¥i t·ª´ ng√†y ƒë√≥ tr·ªü ƒëi.",
  },

  zh: {
    // Header
    decks: "Âç°ÁªÑ",
    add: "Ê∑ªÂä†",
    connect: "ËøûÊé•",
    disconnect: "Êñ≠ÂºÄËøûÊé•",
    loading: "Âä†ËΩΩ‰∏≠...",
    privacyPolicy: "ÈöêÁßÅÊîøÁ≠ñ",

    // Submit Deck Page
    submitDeck: "Êèê‰∫§Âç°ÁªÑ",
    createFlashcardDeck: "ÂàõÂª∫Èó™Âç°Âç°ÁªÑËøõË°åÊµãËØïÁΩëÂÆ°Êü•„ÄÇÊÇ®ÈúÄË¶Å Base Sepolia ETHÔºåÂèØ‰ª•‰ªé‰ª•‰∏ãÂÖçË¥πËé∑Âèñ",
    needBaseSepolia: "ÁΩëÁªúÊ∞¥ÈæôÂ§¥",
    networkFaucets: "ÁΩëÁªúÊ∞¥ÈæôÂ§¥",
    deckName: "Âç°ÁªÑÂêçÁß∞",
    briefDescription: "ÁÆÄË¶ÅÊèèËø∞",
    frontLanguage: "Ê≠£Èù¢ËØ≠Ë®Ä",
    backLanguage: "ËÉåÈù¢ËØ≠Ë®Ä",
    inputMethod: "ËæìÂÖ•ÊñπÂºè",
    manualEntry: "‚úçÔ∏è ÊâãÂä®ËæìÂÖ•",
    csvUpload: "üìÑ CSV ‰∏ä‰º†",
    dropCsvOrClick: "üìÑ ÊãñÊîæ CSV ÊàñÁÇπÂáª‰∏ä‰º†",
    csvFormat: "Ê†ºÂºèÔºöfront_text,back_text,front_phonetic_guide,back_phonetic_guide,notes",
    flashcards: "Èó™Âç°",
    addCard: "+ Ê∑ªÂä†Âç°Áâá",
    card: "Âç°Áâá",
    remove: "ÁßªÈô§",
    frontText: "Ê≠£Èù¢ÊñáÊú¨",
    backText: "ËÉåÈù¢ÊñáÊú¨",
    phoneticGuide: "ÊãºÈü≥ÊåáÂçó",
    phoneticGuideOptional: "ÊãºÈü≥ÊåáÂçóÔºàÂèØÈÄâÔºâ",
    notesOptional: "Â§áÊ≥®ÔºàÂèØÈÄâÔºâ",
    submitting: "Êèê‰∫§‰∏≠...",
    required: "ÂøÖÂ°´",
    minimumCardsRequired: "Ëá≥Â∞ëÈúÄË¶Å 5 Âº†ÂÆåÊï¥Âç°Áâá",
    csvFileRequired: "ÈúÄË¶Å CSV Êñá‰ª∂",

    // Homepage
    cobrowseWithScarlett: "‰ΩøÁî® Scarlett AI Êâ©Â±ïÂçèÂêåÊµèËßà",
    languageTutorDescription: "ËØ≠Ë®ÄÂØºÂ∏à„ÄÅÁîüÊ¥ªÊïôÁªÉ„ÄÅÊúãÂèã„ÄÇÂÖçË¥π‰∏îÂºÄÊ∫ê„ÄÇ",
    chromeBrowser: "Chrome",
    firefoxBrowser: "Firefox",
    scarlettSupercoach: "Scarlett ÊòØÊÇ®ÁöÑË∂ÖÁ∫ßÊïôÁªÉ",
    spacedRepetitionDescription: "Èó¥ÈöîÈáçÂ§ç„ÄÅËßíËâ≤ÊâÆÊºî„ÄÅÁîü‰∫ßÂäõÁ≠âÁ≠â„ÄÇ",
    addFlashcardsToStudy: "Ê∑ªÂä†Èó™Âç°Â≠¶‰π†",
    addFlashcardsDescription: "Ê∑ªÂä†ÂÖ∂‰ªñÁî®Êà∑ÁöÑÈó™Âç°Âç°ÁªÑÔºåÊàñÂàõÂª∫Ëá™Â∑±ÁöÑ„ÄÇ",
    viewDecks: "Êü•ÁúãÂç°ÁªÑ",
    learnPassivelyAcrossWeb: "Âú®ÁΩëÁªú‰∏äË¢´Âä®Â≠¶‰π†",
    learnPassivelyDescription: "Scarlett Âú®ÊÇ®ËÆøÈóÆÁöÑÁΩëÈ°µ‰∏äÊõøÊç¢ÊÇ®Ê≠£Âú®Â≠¶‰π†ÁöÑÂçïËØç„ÄÇ",
    translateFasterLocally: "Êõ¥Âø´Âú∞Êú¨Âú∞ÁøªËØë",
    translateFasterDescription: "Âè≥ÈîÆÂçïÂáªÁøªËØë‰ªª‰ΩïÊñáÊú¨ÔºåÁÑ∂ÂêéËá™Âä®Â∞ÜÂÖ∂Ê∑ªÂä†Âà∞ÊÇ®ÁöÑÈó™Âç°Âç°ÁªÑ‰∏≠„ÄÇ",
    quizYourselfDaily: "ÊØèÊó•Ëá™Êµã",
    quizYourselfDescription: "Scarlett ÁîüÊàêÂ§öÈÄâÁ≠âÊµãÈ™åÈóÆÈ¢òÊù•ÊµãËØïÊÇ®ÁöÑÁü•ËØÜ„ÄÇ",
    embedEveryWebpage: "ÂµåÂÖ•ÊÇ®ËÆøÈóÆÁöÑÊØè‰∏™ÁΩëÈ°µ",
    embedEveryWebpageDescription: "Scarlett ÂØπÊÇ®ËÆøÈóÆÁöÑÊØè‰∏™È°µÈù¢ËøõË°åÊéíÈòü„ÄÅÊÄªÁªìÂíåÂµåÂÖ•„ÄÇÂ•πÊØîÊÇ®Êõ¥‰∫ÜËß£ÊÇ®Ëá™Â∑±„ÄÇ",
    blockSitesInFocusMode: "Âú®\"‰∏ìÊ≥®Ê®°Âºè\"ÊúüÈó¥ÈòªÊ≠¢ÁΩëÁ´ô",
    blockSitesDescription: "ÂèëÁé∞Ëá™Â∑±‰π†ÊÉØÊÄßÂú∞ËÆøÈóÆËâ≤ÊÉÖÁΩëÁ´ôÊàñÁ§æ‰∫§Â™í‰ΩìÔºüÂêØÁî®‰∏ìÊ≥®Ê®°ÂºèÂ∞ÜÈáçÂÆöÂêëÂà∞ÊÇ®ÁöÑÈó™Âç°„ÄÇ",
    getVoiceAudioWithTimestamps: "Ëé∑ÂèñÂ∏¶Êó∂Èó¥Êà≥ÁöÑËØ≠Èü≥Èü≥È¢ë",
    getVoiceAudioDescription: "ËÆæÁΩÆ ElevenLabs ÁöÑÊñáÊú¨ËΩ¨ËØ≠Èü≥ÔºåÁîüÊàêÂÖ∑ÊúâÂçïËØçÁ∫ßÊó∂Èó¥Êà≥ÁöÑÈÄºÁúü TTSÔºåÈùûÂ∏∏ÈÄÇÂêàÂ≠¶‰π†„ÄÇ",
    getVoiceAudioSupport: "Âç≥Â∞ÜÊîØÊåÅ Orpheus„ÄÅDia Âíå Kokoro„ÄÇ",
    evadeCensorship: "ËßÑÈÅøÂÆ°Êü•",
    evadeCensorshipDescription: "Êó†Ê≥ïËÆøÈóÆ YouTube„ÄÅReddit Êàñ TwitchÔºüScarlett Ëá™Âä®Â∞ÜÊÇ®ÈáçÂÆöÂêëÂà∞‰øùÊä§ÈöêÁßÅÁöÑÂâçÁ´ØÔºåÂç≥‰ΩøÊ≤°Êúâ VPN ‰πüÂèØ‰ª•ËÆøÈóÆ„ÄÇ",
    downloadForFree: "ÂÖçË¥π‰∏ãËΩΩ",
    installScarlettExtension: "ÂÆâË£Ö Scarlett ÊµèËßàÂô®Êâ©Â±ï",

    // Languages
    english: "Ëã±ËØ≠",
    vietnamese: "Ë∂äÂçóËØ≠",
    mandarin: "‰∏≠Êñá",
    german: "Âæ∑ËØ≠",
    italian: "ÊÑèÂ§ßÂà©ËØ≠",
    portuguese: "Ëë°ËêÑÁâôËØ≠",
    russian: "‰øÑËØ≠",
    japanese: "Êó•ËØ≠",
    korean: "Èü©ËØ≠",

    // Privacy Policy
    privacyPolicyTitle: "Scarlett ÊµèËßàÂô®Êâ©Â±ïÈöêÁßÅÊîøÁ≠ñ",
    lastUpdated: "ÊúÄÂêéÊõ¥Êñ∞Ôºö",
    introduction: "‰ªãÁªç",
    introductionText: "ScarlettÔºà'Êàë‰ª¨'„ÄÅ'Êàë‰ª¨ÁöÑ'Êàñ'Êàë‰ª¨'ÔºâËá¥Âäõ‰∫é‰øùÊä§ÊÇ®ÁöÑÈöêÁßÅ„ÄÇÊú¨ÈöêÁßÅÊîøÁ≠ñËß£Èáä‰∫ÜÂΩìÊÇ®‰ΩøÁî®Êàë‰ª¨ÁöÑÊµèËßàÂô®Êâ©Â±ïÊó∂ÔºåÊàë‰ª¨Â¶Ç‰ΩïÊî∂ÈõÜ„ÄÅ‰ΩøÁî®Âíå‰øùÊä§‰ø°ÊÅØ„ÄÇ",
    informationWeCollect: "Êàë‰ª¨Êî∂ÈõÜÁöÑ‰ø°ÊÅØ",
    analyticsData: "ÂàÜÊûêÊï∞ÊçÆ",
    analyticsDataDesc: "Êàë‰ª¨‰ΩøÁî® Umami AnalyticsÔºà‰∏ìÊ≥®‰∫éÈöêÁßÅÁöÑÂàÜÊûêÊúçÂä°ÔºâÊî∂ÈõÜÂåøÂêç‰ΩøÁî®ÁªüËÆ°‰ø°ÊÅØÔºå‰ª•Â∏ÆÂä©Êàë‰ª¨ÊîπËøõÊâ©Â±ï„ÄÇËøôÂåÖÊã¨Ôºö",
    featureUsageMetrics: "ÂäüËÉΩ‰ΩøÁî®ÊåáÊ†áÔºöÊÇ®‰ΩøÁî®ÁöÑÂäüËÉΩÔºàËÅäÂ§©„ÄÅÂ≠¶‰π†‰ºöËØù„ÄÅ‰∏ìÊ≥®Ê®°Âºè„ÄÅ‰π¶Á≠æÁ≠âÔºâ",
    performanceData: "ÊÄßËÉΩÊï∞ÊçÆÔºöÂäüËÉΩËÆøÈóÆÈ¢ëÁéáÂíåÂü∫Êú¨‰ΩøÁî®Ê®°Âºè",
    milestoneEvents: "ÈáåÁ®ãÁ¢ë‰∫ã‰ª∂ÔºöÂ≠¶‰π†ËøûÁª≠ÊÄßÂíåÂ≠¶‰π†ËøõÂ∫¶ÁöÑÂåøÂêçË∑üË∏™",
    technicalInformation: "ÊäÄÊúØ‰ø°ÊÅØÔºöÊµèËßàÂô®Á±ªÂûã„ÄÅÊâ©Â±ïÁâàÊú¨ÂíåÂü∫Êú¨Á≥ªÁªü‰ø°ÊÅØ",
    whatWeDoNotCollect: "Êàë‰ª¨‰∏çÊî∂ÈõÜÁöÑÂÜÖÂÆπ",
    personalConversations: "‰∏™‰∫∫ÂØπËØùÔºöÊÇ®ÁöÑ AI ËÅäÂ§©ÂØπËØùÂÆåÂÖ®‰øùÁïôÂú®ÊÇ®ÁöÑËÆæÂ§áÊú¨Âú∞",
    personalInformation: "‰∏™‰∫∫‰ø°ÊÅØÔºöÊàë‰ª¨‰∏çÊî∂ÈõÜÂßìÂêç„ÄÅÁîµÂ≠êÈÇÆ‰ª∂Âú∞ÂùÄÊàñÂÖ∂‰ªñ‰∏™‰∫∫Ë∫´‰ªΩ‰ø°ÊÅØ",
    browsingHistory: "ÊµèËßàÂéÜÂè≤ÔºöÊàë‰ª¨‰∏çË∑üË∏™ÊàñÂ≠òÂÇ®ÊÇ®Âú®Êâ©Â±ïÂ§ñÁöÑÊµèËßàÊ¥ªÂä®",
    fileContents: "Êñá‰ª∂ÂÜÖÂÆπÔºöÊÇ®Â§ÑÁêÜÁöÑ‰ªª‰ΩïÊñáÊ°£ÊàñÂÜÖÂÆπÈÉΩ‰øùÁïôÂú®ÊÇ®ÁöÑËÆæÂ§á‰∏ä",
    voiceData: "ËØ≠Èü≥Êï∞ÊçÆÔºöËØ≠Èü≥ËΩ¨ÊñáÊú¨Â§ÑÁêÜÂú®ÊÇ®ÁöÑËÆæÂ§áÊú¨Âú∞ËøõË°å",
    howWeUseInformation: "Êàë‰ª¨Â¶Ç‰Ωï‰ΩøÁî®‰ø°ÊÅØ",
    howWeUseInformationDesc: "Êàë‰ª¨‰ΩøÁî®Êî∂ÈõÜÁöÑÂàÜÊûêÊï∞ÊçÆÊù•Ôºö",
    improveFeatures: "ÊîπËøõÊâ©Â±ïÂäüËÉΩÂíåÁî®Êà∑‰ΩìÈ™å",
    identifyBugs: "ËØÜÂà´Âíå‰øÆÂ§çÈîôËØØÊàñÊÄßËÉΩÈóÆÈ¢ò",
    understandValuableFeatures: "‰∫ÜËß£Âì™‰∫õÂäüËÉΩÂØπÁî®Êà∑ÊúÄÊúâ‰ª∑ÂÄº",
    informDevelopmentDecisions: "‰∏∫Êú™Êù•ÂºÄÂèëÂÅöÂá∫ÊòéÊô∫ÂÜ≥Á≠ñ",
    dataStorageAndSecurity: "Êï∞ÊçÆÂ≠òÂÇ®ÂíåÂÆâÂÖ®",
    localData: "Êú¨Âú∞Êï∞ÊçÆ",
    localDataDesc1: "ÊÇ®ÁöÑÊâÄÊúâ‰∏™‰∫∫Êï∞ÊçÆÔºàÂØπËØù„ÄÅ‰π¶Á≠æ„ÄÅÂ≠¶‰π†ËøõÂ∫¶ÔºâÈÉΩÂ≠òÂÇ®Âú®ÊÇ®ÊµèËßàÂô®ÁöÑÊú¨Âú∞",
    localDataDesc2: "‰∏éÊú¨Âú∞Ê®°ÂûãÔºàJan.ai„ÄÅOllama„ÄÅLM StudioÔºâÁöÑ AI ÂØπËØù‰ªé‰∏çÁ¶ªÂºÄÊÇ®ÁöÑËÆæÂ§á",
    localDataDesc3: "ÊÇ®ÁöÑÂ≠¶‰π†ÊùêÊñôÂíåËøõÂ∫¶‰ªÖÂú®ÊµèËßàÂô®ÁöÑÊú¨Âú∞Â≠òÂÇ®‰∏≠ÂêåÊ≠•",
    analyticsDataSection: "ÂàÜÊûêÊï∞ÊçÆ",
    analyticsDataDesc1: "ÂåøÂêç‰ΩøÁî®ÂàÜÊûêÁî± Umami Analytics Â§ÑÁêÜ",
    analyticsDataDesc2: "Êï∞ÊçÆÂ≠òÂÇ®Âú®ÂÆâÂÖ®ÊúçÂä°Âô®‰∏äÂπ∂Ëá™Âä®ÂåøÂêçÂåñ",
    analyticsDataDesc3: "‰∏ç‰º†ËæìÊàñÂ≠òÂÇ®‰∏™‰∫∫Ê†áËØÜÁ¨¶",
    thirdPartyServices: "Á¨¨‰∏âÊñπÊúçÂä°",
    umamiAnalytics: "Umami Analytics",
    umamiAnalyticsDesc: "Êàë‰ª¨‰ΩøÁî® Umami Analytics (cloud.umami.is) ËøõË°å‰∏ìÊ≥®‰∫éÈöêÁßÅÁöÑÁΩëÁ´ôÂàÜÊûê„ÄÇUmamiÔºö",
    umamiFeature1: "‰∏ç‰ΩøÁî® cookie ÊàñË∑üË∏™‰∏™‰∫∫‰ø°ÊÅØ",
    umamiFeature2: "ÈÅµÂÆà GDPR ÂíåÂÖ∂‰ªñÈöêÁßÅÊ≥ïËßÑ",
    umamiFeature3: "‰ªÖÊèê‰æõËÅöÂêàÁöÑÂåøÂêçÊï∞ÊçÆ",
    moreInfoUmami: "Êõ¥Â§ö‰ø°ÊÅØ",
    localAiModels: "Êú¨Âú∞ AI Ê®°Âûã",
    localAiModelsDesc: "Êâ©Â±ïÊîØÊåÅ‰∏éÊú¨Âú∞ AI ÊúçÂä°ÔºàJan.ai„ÄÅOllama„ÄÅLM StudioÔºâÈõÜÊàêÔºö",
    localAiFeature1: "ÊâÄÊúâ AI ÂØπËØùÈÉΩÂú®ÊÇ®ÁöÑËÆæÂ§áÊú¨Âú∞ËøõË°å",
    localAiFeature2: "‰∏ç‰ºöÂ∞ÜÂØπËØùÊï∞ÊçÆ‰º†ËæìÂà∞Â§ñÈÉ®ÊúçÂä°Âô®",
    localAiFeature3: "ÊÇ®ÂÆåÂÖ®ÊéßÂà∂ÊÇ®ÁöÑ AI ‰∫§‰∫í",
    yourRightsAndChoices: "ÊÇ®ÁöÑÊùÉÂà©ÂíåÈÄâÊã©",
    dataControl: "Êï∞ÊçÆÊéßÂà∂",
    disableAnalytics: "Á¶ÅÁî®ÂàÜÊûêÔºöÊÇ®ÂèØ‰ª•Âú®Êâ©Â±ïËÆæÁΩÆ‰∏≠Á¶ÅÁî®ÂàÜÊûêÊî∂ÈõÜ",
    clearLocalData: "Êú¨Âú∞Êï∞ÊçÆÔºöÊÇ®ÂèØ‰ª•ÈÄöËøáÊµèËßàÂô®ËÆæÁΩÆÊ∏ÖÈô§ÊâÄÊúâÊú¨Âú∞Êâ©Â±ïÊï∞ÊçÆ",
    featureControl: "ÂäüËÉΩÊéßÂà∂ÔºöÊÇ®ÂèØ‰ª•Ê†πÊçÆÈúÄË¶ÅÂêØÁî®/Á¶ÅÁî®ÁâπÂÆöÂäüËÉΩ",
    accessAndDeletion: "ËÆøÈóÆÂíåÂà†Èô§",
    accessAndDeletionDesc1: "ÂàÜÊûêÊï∞ÊçÆÊòØÂåøÂêçÁöÑÔºåÊó†Ê≥ïËøΩÊ∫ØÂà∞‰∏™‰∫∫Áî®Êà∑",
    accessAndDeletionDesc2: "ÊÇ®ÂèØ‰ª•ÈÄöËøáËÅîÁ≥ªÊàë‰ª¨ËØ∑Ê±ÇÊúâÂÖ≥Êàë‰ª¨Êï∞ÊçÆÂÆûË∑µÁöÑ‰ø°ÊÅØ",
    accessAndDeletionDesc3: "ÂèØ‰ª•ÈÄöËøáÂç∏ËΩΩÊâ©Â±ïÊàñÊ∏ÖÈô§ÊµèËßàÂô®Êï∞ÊçÆÊù•Âà†Èô§Êú¨Âú∞Êï∞ÊçÆ",
    contactInformation: "ËÅîÁ≥ª‰ø°ÊÅØ",
    contactInformationDesc: "Â¶ÇÊûúÊÇ®ÂØπÊú¨ÈöêÁßÅÊîøÁ≠ñÊàñÊàë‰ª¨ÁöÑÊï∞ÊçÆÂÆûË∑µÊúâÁñëÈóÆÔºåËØ∑ËÅîÁ≥ªÊàë‰ª¨Ôºö",
    githubIssues: "GitHub Issues",
    openSourceTransparency: "ÂºÄÊ∫êÈÄèÊòéÂ∫¶",
    openSourceTransparencyDesc: "Scarlett ÊòØÂºÄÊ∫êËΩØ‰ª∂„ÄÇÊÇ®ÂèØ‰ª•Âú®‰ª•‰∏ã‰ΩçÁΩÆÊü•ÁúãÊàë‰ª¨ÁöÑ‰ª£Á†ÅÂíåÊï∞ÊçÆÂÆûË∑µÔºö",
    githubRepository: "GitHub ‰ªìÂ∫ì",
    updatesToPolicy: "ÊîøÁ≠ñÊõ¥Êñ∞",
    updatesPolicyDesc: "Êàë‰ª¨ÂèØËÉΩ‰ºöÂÆöÊúüÊõ¥Êñ∞Êú¨ÈöêÁßÅÊîøÁ≠ñ„ÄÇÊàë‰ª¨Â∞ÜÈÄöËøá‰ª•‰∏ãÊñπÂºèÈÄöÁü•Áî®Êà∑‰ªª‰ΩïÈáçË¶ÅÊõ¥ÊîπÔºö",
    extensionUpdateNotifications: "Êâ©Â±ïÊõ¥Êñ∞ÈÄöÁü•",
    websitePosting: "Âú®Êàë‰ª¨ÁöÑÁΩëÁ´ô‰∏äÂèëÂ∏ÉÊõ¥Êñ∞ÊîøÁ≠ñ",
    githubRepositoryUpdates: "GitHub ‰ªìÂ∫ìÊõ¥Êñ∞",
    finalNote: "Êú¨ÈöêÁßÅÊîøÁ≠ñËá™‰∏äËø∞Êó•ÊúüËµ∑ÁîüÊïàÔºåÂπ∂ÁÆ°ÁêÜÊàë‰ª¨‰ªéËØ•Êó•ÊúüËµ∑ÁöÑ‰ø°ÊÅØÊî∂ÈõÜÂíå‰ΩøÁî®„ÄÇ",
  },
};

export function useTranslation(locale: string = 'en'): Translations {
  return translations[locale] || translations.en;
} 